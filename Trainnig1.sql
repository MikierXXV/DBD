--Ej 1

SELECT p.NUM_PROJ, p.NOM_PROJ, COUNT(DISTINCT d.CIUTAT_DPT) AS ciutats
FROM PROJECTES p LEFT OUTER JOIN EMPLEATS e ON p.NUM_PROJ = e.NUM_PROJ
				 LEFT OUTER JOIN DEPARTAMENTS d ON e.NUM_DPT = d.NUM_DPT 
GROUP BY p.NUM_PROJ, p.NOM_PROJ;


-- Ej 2

SELECT DISTINCT d.NUM_DPT, COUNT(e.NUM_EMPL) AS count_e 
FROM DEPARTAMENTS d LEFT outer JOIN EMPLEATS e ON d.NUM_DPT = e.NUM_DPT 
--WHERE e.CIUTAT_EMPL IS NOT NULL AND e.CIUTAT_EMPL IN (SELECT d1.CIUTAT_DPT FROM DEPARTAMENTS d1)  
GROUP BY d.NUM_DPT;

-- Ej 3

-- Ciutats del dpt on treballen els empleats 
SELECT d.CIUTAT_DPT, COUNT(d.NUM_EMPL) AS N_Empleats
FROM DEPARTAMENTS d LEFT OUTER JOIN EMPLEATS e ON d.NUM_DPT = e.NUM_DPT 
--FROM DEPARTAMENTS d, EMPLEATS e 
--WHERE d.NUM_DPT = e.NUM_DPT 
GROUP BY d.CIUTAT_DPT
HAVING d.CIUTAT_DPT IS NOT NULL 

UNION 

-- Ciutats on no treballen els empleats
SELECT e1.CIUTAT_EMPL, 0 AS count 
FROM EMPLEATS e1 
WHERE e1.CIUTAT_EMPL IS NOT NULL AND 
e1.CIUTAT_EMPL NOT IN (SELECT d1.CIUTAT_DPT 
					   FROM DEPARTAMENTS d1 
					   WHERE d1.CIUTAT_DPT IS NOT NULL);
		

-- Ej 4
					  
-- Domicilis aque han fet mes comandes					  
-- Relaciono tablas mediante el numtelf mirando que no sea null y lo agrupo
SELECT d.NOMCARRER, d.NUMCARRER 
FROM DOMICILIS d, COMANDES c 
WHERE d.NUMTELF = c.NUMTELF AND d.NUMTELF IS NOT NULL
GROUP BY d.NOMCARRER, d.NUMCARRER 
-- Para contar el maximo de comandes de los domicilios hago max(count(*)) del la relacion establecida 
HAVING COUNT(*) = (
		SELECT MAX(COUNT(*))
		FROM DOMICILIS d1, COMANDES c1 
		WHERE d1.NUMTELF IS NOT NULL AND d1.NUMTELF = c1.NUMTELF 
		GROUP BY d1.NOMCARRER, d1.NUMCARRER 
)

UNION 

-- caos de las comandas solo en la tienda 
SELECT NULL, NULL 
FROM COMANDES c
WHERE NOT EXISTS (
			SELECT * 
			FROM COMANDES c1
			WHERE c1.NUMTELF IS NOT NULL);
			
		

-- Ej 5
		
-- relacion entre linia de comandes + producto para poder obtener en cuantas comandes forma parte un producto 
SELECT p.IDPRODUCTE, COUNT(DISTINCT l1.IDPRODUCTE) AS Comptador
FROM (LINIESCOMANDES l LEFT OUTER JOIN LINIESCOMANDES l1 ON (l.NUMCOMANDA = l1.NUMCOMANDA))
					  RIGHT OUTER JOIN PRODUCTES p ON (p.IDPRODUCTE = l.IDPRODUCTE)
GROUP BY p.IDPRODUCTE 
ORDER BY p.IDPRODUCTE;
		

-- Ej 6

SELECT COUNT(h.HORA)
FROM HABITACIONS h 
WHERE h.HORA IS NOT NULL 
AND EXISTS (
			SELECT DISTINCT h1.hora
			FROM HABITACIONS h1
			WHERE h.HORA <> h1.HORA);
		
SELECT COUNT(h.HORA)
FROM HABITACIONS h 
WHERE h.HORA IS NOT NULL 
AND EXISTS (
			SELECT DISTINCT h1.hora
			FROM HABITACIONS h1
			);

-- bueno
SELECT COUNT(*)
FROM (
	SELECT DISTINCT h1.hora
	FROM HABITACIONS h1);


-- Accessing a generalisation without outer


SELECT e1.ID, e1.AGE, e1.NAME, NULL ,d1.OFFICE 
FROM  EMPLOYEE e1, DIRECTOR d1
WHERE e1.id = d1.id AND e1.id NOT IN (SELECT c1.id FROM CLERK c1)

UNION

SELECT e2.ID, e2.AGE, e2.NAME, c2.INFOACCESSLEVEL, NULL 
FROM  EMPLOYEE e2, CLERK c2 
WHERE e2.id = c2.id AND e2.id NOT IN (SELECT d2.id FROM DIRECTOR d2)

UNION

SELECT e3.ID, e3.AGE, e3.NAME, c3.INFOACCESSLEVEL, d3.OFFICE  
FROM EMPLOYEE e3, DIRECTOR d3, CLERK c3
WHERE e3.id = d3.id AND e3.id = c3.id

UNION 

SELECT e.ID, e.AGE, e.NAME, NULL, NULL 
FROM EMPLOYEE e
WHERE e.id NOT IN (SELECT d.id FROM DIRECTOR d) AND e.id NOT IN (SELECT c.id FROM CLERK c)

ORDER BY id;


























		